# The vncserver service unit file
#
# Quick HowTo:
# 1. Copy this file to /etc/systemd/system/vncserver@.service
# 2. Replace <USER> with the actual user name and edit vncserver
#    parameters appropriately
#   ("User=<USER>" and "/home/<USER>/.vnc/%H%i.pid")
# 3. Run `systemctl daemon-reload`
# 4. Run `systemctl enable vncserver@:<display>.service`
#
# DO NOT RUN THIS SERVICE if your local area network is
# untrusted!  For a secure way of using VNC, you should
# limit connections to the local host and then tunnel from
# the machine you want to view VNC on (host A) to the machine
# whose VNC output you want to view (host B)
#
# [user@hostA ~]$ ssh -v -C -L 590N:localhost:590M hostB
#
# this will open a connection on port 590N of your hostA to hostB's port 590M
# (in fact, it ssh-connects to hostB and then connects to localhost (on hostB).
# See the ssh man page for details on port forwarding)
#
# You can then point a VNC client on hostA at vncdisplay N of localhost and with
# the help of ssh, you end up seeing what hostB makes available on port 590M
#
# Use "-nolisten tcp" to prevent X connections to your VNC server via TCP.
#
# Use "-localhost" to prevent remote VNC clients connecting except when
# doing so through a secure tunnel.  See the "-via" option in the
# `man vncviewer' manual page.




[Unit]
Description=Remote desktop service (VNC)
After=syslog.target network.target

[Service]
User=user

# Clean any existing files in /tmp/.X11-unix environment
#ExecStartPre=-/usr/bin/vncserver -kill :1
#ExecStart=/sbin/runuser -l user -c "/usr/bin/vncserver :1 -depth 24 -geometry 10240x768"
#PIDFile=/home/user/.vnc/%H:1.pid
#ExecStop=-/usr/bin/vncserver -kill :1
Type=forking
ExecStart=/bin/bash /home/user/vnc-run.sh

KillMode=process 

[Install]
WantedBy=multi-user.target
